#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TranEquiv2")]
public partial class TranEquivDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertDepartment(Department instance);
  partial void UpdateDepartment(Department instance);
  partial void DeleteDepartment(Department instance);
  partial void InsertLineItem(LineItem instance);
  partial void UpdateLineItem(LineItem instance);
  partial void DeleteLineItem(LineItem instance);
  partial void InsertSchool(School instance);
  partial void UpdateSchool(School instance);
  partial void DeleteSchool(School instance);
  #endregion
	
	public TranEquivDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TranEquivConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public TranEquivDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TranEquivDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TranEquivDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TranEquivDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<DeltaCourse> DeltaCourses
	{
		get
		{
			return this.GetTable<DeltaCourse>();
		}
	}
	
	public System.Data.Linq.Table<TransferCourse> TransferCourses
	{
		get
		{
			return this.GetTable<TransferCourse>();
		}
	}
	
	public System.Data.Linq.Table<Department> Departments
	{
		get
		{
			return this.GetTable<Department>();
		}
	}
	
	public System.Data.Linq.Table<LineItem> LineItems
	{
		get
		{
			return this.GetTable<LineItem>();
		}
	}
	
	public System.Data.Linq.Table<School> Schools
	{
		get
		{
			return this.GetTable<School>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AvailableSchoolLetters")]
	public ISingleResult<AvailableSchoolLettersResult> AvailableSchoolLetters()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<AvailableSchoolLettersResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DepartmentsForSchoolTransfers")]
	public ISingleResult<DepartmentsForSchoolTransfersResult> DepartmentsForSchoolTransfers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SchoolID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> schoolID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), schoolID);
		return ((ISingleResult<DepartmentsForSchoolTransfersResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCourseID")]
	public ISingleResult<GetCourseIDResult> GetCourseID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CourseName", DbType="NVarChar(20)")] string courseName)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), courseName);
		return ((ISingleResult<GetCourseIDResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeltaCourses")]
public partial class DeltaCourse
{
	
	private string _CourseNumber;
	
	private string _CourseName;
	
	private System.Guid _LineItemID;
	
	public DeltaCourse()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseNumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string CourseNumber
	{
		get
		{
			return this._CourseNumber;
		}
		set
		{
			if ((this._CourseNumber != value))
			{
				this._CourseNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
	public string CourseName
	{
		get
		{
			return this._CourseName;
		}
		set
		{
			if ((this._CourseName != value))
			{
				this._CourseName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineItemID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid LineItemID
	{
		get
		{
			return this._LineItemID;
		}
		set
		{
			if ((this._LineItemID != value))
			{
				this._LineItemID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransferCourses")]
public partial class TransferCourse
{
	
	private string _CourseNumber;
	
	private string _CourseName;
	
	private System.Guid _LineItemID;
	
	public TransferCourse()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseNumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string CourseNumber
	{
		get
		{
			return this._CourseNumber;
		}
		set
		{
			if ((this._CourseNumber != value))
			{
				this._CourseNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
	public string CourseName
	{
		get
		{
			return this._CourseName;
		}
		set
		{
			if ((this._CourseName != value))
			{
				this._CourseName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineItemID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid LineItemID
	{
		get
		{
			return this._LineItemID;
		}
		set
		{
			if ((this._LineItemID != value))
			{
				this._LineItemID = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _DepartmentID;
	
	private string _DepartmentName;
	
	private EntitySet<LineItem> _LineItems;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    #endregion
	
	public Department()
	{
		this._LineItems = new EntitySet<LineItem>(new Action<LineItem>(this.attach_LineItems), new Action<LineItem>(this.detach_LineItems));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
	public string DepartmentName
	{
		get
		{
			return this._DepartmentName;
		}
		set
		{
			if ((this._DepartmentName != value))
			{
				this.OnDepartmentNameChanging(value);
				this.SendPropertyChanging();
				this._DepartmentName = value;
				this.SendPropertyChanged("DepartmentName");
				this.OnDepartmentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_LineItem", Storage="_LineItems", ThisKey="DepartmentID", OtherKey="DepartmentID")]
	public EntitySet<LineItem> LineItems
	{
		get
		{
			return this._LineItems;
		}
		set
		{
			this._LineItems.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.Department = this;
	}
	
	private void detach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.Department = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineItems")]
public partial class LineItem : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _LineItemID;
	
	private decimal _TransferCredits;
	
	private System.Guid _SchoolID;
	
	private decimal _DeltaCredits;
	
	private System.Guid _DepartmentID;
	
	private EntityRef<Department> _Department;
	
	private EntityRef<School> _School;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLineItemIDChanging(System.Guid value);
    partial void OnLineItemIDChanged();
    partial void OnTransferCreditsChanging(decimal value);
    partial void OnTransferCreditsChanged();
    partial void OnSchoolIDChanging(System.Guid value);
    partial void OnSchoolIDChanged();
    partial void OnDeltaCreditsChanging(decimal value);
    partial void OnDeltaCreditsChanged();
    partial void OnDepartmentIDChanging(System.Guid value);
    partial void OnDepartmentIDChanged();
    #endregion
	
	public LineItem()
	{
		this._Department = default(EntityRef<Department>);
		this._School = default(EntityRef<School>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid LineItemID
	{
		get
		{
			return this._LineItemID;
		}
		set
		{
			if ((this._LineItemID != value))
			{
				this.OnLineItemIDChanging(value);
				this.SendPropertyChanging();
				this._LineItemID = value;
				this.SendPropertyChanged("LineItemID");
				this.OnLineItemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferCredits", DbType="Decimal(4,2) NOT NULL")]
	public decimal TransferCredits
	{
		get
		{
			return this._TransferCredits;
		}
		set
		{
			if ((this._TransferCredits != value))
			{
				this.OnTransferCreditsChanging(value);
				this.SendPropertyChanging();
				this._TransferCredits = value;
				this.SendPropertyChanged("TransferCredits");
				this.OnTransferCreditsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid SchoolID
	{
		get
		{
			return this._SchoolID;
		}
		set
		{
			if ((this._SchoolID != value))
			{
				if (this._School.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSchoolIDChanging(value);
				this.SendPropertyChanging();
				this._SchoolID = value;
				this.SendPropertyChanged("SchoolID");
				this.OnSchoolIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeltaCredits", DbType="Decimal(4,2) NOT NULL")]
	public decimal DeltaCredits
	{
		get
		{
			return this._DeltaCredits;
		}
		set
		{
			if ((this._DeltaCredits != value))
			{
				this.OnDeltaCreditsChanging(value);
				this.SendPropertyChanging();
				this._DeltaCredits = value;
				this.SendPropertyChanged("DeltaCredits");
				this.OnDeltaCreditsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				if (this._Department.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_LineItem", Storage="_Department", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
	public Department Department
	{
		get
		{
			return this._Department.Entity;
		}
		set
		{
			Department previousValue = this._Department.Entity;
			if (((previousValue != value) 
						|| (this._Department.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Department.Entity = null;
					previousValue.LineItems.Remove(this);
				}
				this._Department.Entity = value;
				if ((value != null))
				{
					value.LineItems.Add(this);
					this._DepartmentID = value.DepartmentID;
				}
				else
				{
					this._DepartmentID = default(System.Guid);
				}
				this.SendPropertyChanged("Department");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_LineItem", Storage="_School", ThisKey="SchoolID", OtherKey="SchoolID", IsForeignKey=true)]
	public School School
	{
		get
		{
			return this._School.Entity;
		}
		set
		{
			School previousValue = this._School.Entity;
			if (((previousValue != value) 
						|| (this._School.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._School.Entity = null;
					previousValue.LineItems.Remove(this);
				}
				this._School.Entity = value;
				if ((value != null))
				{
					value.LineItems.Add(this);
					this._SchoolID = value.SchoolID;
				}
				else
				{
					this._SchoolID = default(System.Guid);
				}
				this.SendPropertyChanged("School");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schools")]
public partial class School : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _SchoolID;
	
	private string _SchoolName;
	
	private string _Website;
	
	private string _MappedName;
	
	private EntitySet<LineItem> _LineItems;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolIDChanging(System.Guid value);
    partial void OnSchoolIDChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnMappedNameChanging(string value);
    partial void OnMappedNameChanged();
    #endregion
	
	public School()
	{
		this._LineItems = new EntitySet<LineItem>(new Action<LineItem>(this.attach_LineItems), new Action<LineItem>(this.detach_LineItems));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid SchoolID
	{
		get
		{
			return this._SchoolID;
		}
		set
		{
			if ((this._SchoolID != value))
			{
				this.OnSchoolIDChanging(value);
				this.SendPropertyChanging();
				this._SchoolID = value;
				this.SendPropertyChanged("SchoolID");
				this.OnSchoolIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string SchoolName
	{
		get
		{
			return this._SchoolName;
		}
		set
		{
			if ((this._SchoolName != value))
			{
				this.OnSchoolNameChanging(value);
				this.SendPropertyChanging();
				this._SchoolName = value;
				this.SendPropertyChanged("SchoolName");
				this.OnSchoolNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(255)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MappedName", DbType="NVarChar(255)")]
	public string MappedName
	{
		get
		{
			return this._MappedName;
		}
		set
		{
			if ((this._MappedName != value))
			{
				this.OnMappedNameChanging(value);
				this.SendPropertyChanging();
				this._MappedName = value;
				this.SendPropertyChanged("MappedName");
				this.OnMappedNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="School_LineItem", Storage="_LineItems", ThisKey="SchoolID", OtherKey="SchoolID")]
	public EntitySet<LineItem> LineItems
	{
		get
		{
			return this._LineItems;
		}
		set
		{
			this._LineItems.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.School = this;
	}
	
	private void detach_LineItems(LineItem entity)
	{
		this.SendPropertyChanging();
		entity.School = null;
	}
}

public partial class AvailableSchoolLettersResult
{
	
	private System.Nullable<char> _Letter;
	
	public AvailableSchoolLettersResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Letter", DbType="NVarChar(1)")]
	public System.Nullable<char> Letter
	{
		get
		{
			return this._Letter;
		}
		set
		{
			if ((this._Letter != value))
			{
				this._Letter = value;
			}
		}
	}
}

public partial class DepartmentsForSchoolTransfersResult
{
	
	private System.Guid _DepartmentID;
	
	private string _DepartmentName;
	
	public DepartmentsForSchoolTransfersResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				this._DepartmentID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
	public string DepartmentName
	{
		get
		{
			return this._DepartmentName;
		}
		set
		{
			if ((this._DepartmentName != value))
			{
				this._DepartmentName = value;
			}
		}
	}
}

public partial class GetCourseIDResult
{
	
	private System.Nullable<int> _Column1;
	
	public GetCourseIDResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
	public System.Nullable<int> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}
#pragma warning restore 1591
